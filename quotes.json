{
    "quotes":[
        "console.log( bills );",
        "clearYourMind();",
        "const people = [ family, friends, lover ]\n spendQualityTime( people );",
        "garbageCollect();",
        "Happy 11111100110;",
        "DELETE * FROM Memories WHERE type='bad';",
        "if ( angry ) {\n \t silentMode.on();\n}",
        "overthink.init();\n//Internal Error: too much recursion",
        "bePatient();",
        "const exams = university.getRest().Revise().Relax();",
        "INSERT INTO expectations (TYPE, Description)\nVALUES ('positive','It will be alright');",
        "enjoy();",
        "console.log( 'HAPPINESS' );",
        "stayHome();",
        "beKind();",
        "while( quarantine.length > 0 ){\n\t stayCalm();\n}",
        "world.Restore();",
        "quarantine.restrictions-- ;",
        "relax();",
        "if ( socialDistancing.isOver() ){\n\tpeople.hug();\n}",
        "getPurpose();",
        "believe();",
        "chances.forEach(chance => chance.take());",
        "import {luck} from life",
        "nature.CleanUp();",
        "console.log(goals);",
        "assertTrue(time.value > money.value);",
        "smile();",
        "new Day(optimism);",
        "comfortZone.push();",
        "console.log(future);",
        "if (self.getDoubt() > HEALTHY_THRESHHOLD){\n\tgoals.setDifficulty(HIGH);\n}",
        "read();",
        "fear.reduce();",
        "new Idea(knowledge,experience);",
        "action.take( Time.now() );",
        "give();",
        "console.log( autodidacticism );\nconsole.log(autodidacticism == selfEducation);\n//Outputs 1",
        "path.create();",
        "setGoal( name, time, significance);",
        "self.respect();",
        "memories.push( today );",
        "study.then(relax).catch(stress);",
        "new Thought( past, present, future);",
        "self.getReflection();",
        "procrastination.end();",
        "happiness.getInstance();",
        "new Lesson( mistake );",
        "sleep --;\nproductivity ++;",
        "code();",
        "new Achievement( work, time);",
        "focus();",
        "patience.getInstance();",
        "new Relaxation( stress );",
        "self.teach();",
        "alert('stay motivated!');",
        "action.getFeedback();",
        "study.then( practice );",
        "SELECT * people WHERE attitude = 'good'",
        "new luck( work, consistency);",
        "new Media ( filter );",
        "give.then( recieve );",
        "priorities.sort();",
        "stressManager.reduce();",
        "alert( 'Be Grateful' );",
        "DELETE FROM thoughts WHERE category = 'negative'",
        "new Attitude( 'positive' );",
        "new Inspiration( ideas );",
        "friends.filter( friend => friend.type === 'real')",
        "smile. find( reason );",
        "thoughts.filter( 'positive' );",
        "await sign",
        "alert('practice makes perfect')",
        "doubt.terminate();",
        "enjoy();",
        "new Chance();",
        "self.improve();",
        "work.getInstancefrom( passion );",
        "new Happiness( gratitude );",
        "study().then( execute ).then( succeed ).catch( retry );",
        "idea.lock();\nexecute(idea);\nidea.unlock();",
        "new Skill( desire, time);",
        "void Overthinking(){\n\tOverthinking();\n}",
        "goals.visualize();",
        "(life*)malloc( sizeof( dreams ) );",
        "new Investment( self );",
        "cout<< past == future << endl;\n//outputs 0",
        "happiness++;",
        "laziness.abort();",
        "new Day( hope );",
        "DELETE FROM myself WHERE emotion = 'hatered';",
        "StressManager.flush();",
        "new Reality( dream );",
        "chaos.sort();"
    ]
}